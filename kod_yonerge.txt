#Kodun çalışma şekli:

bron-kerbosch.py dosyasındaki kod, ilk önce dosya adını ve tekrar sayısını gösterir. Ardından with open() bloğu kullanarak dosyayı okur
ve dosya içeriğini text değişkenine atar. with open() bloğu, dosya okuma işlemi bittiğinde dosyayı otomatik olarak kapatır.
Sonrasında, her kelime için sayısını hesaplar ve kullanıcıya bildirir. Bu, aranan_kelimeler listesindeki her kelime için
bir kez döngü oluşturarak yapılır. Döngü içinde count() yöntemi kullanılarak, content içinde kelimenin kaç kez tekrar
ettiği hesaplanır ve sonuç sayi değişkenine atanır. Son olarak, print() fonksiyonu kullanılarak kelimenin kaç kez tekrar
ettiği ekrana yazdırılır.
Kodun anlaşılırlığı için, değişken adlarını açıklayıcı bir şekilde seçtim. Ayrıca, kodda yorum satırları kullanarak,
adımları açıkladım ve kullanıcıya açıklama ekledim. Böylece kullanıcının ne yapması gerektiğini anlaması kolay hale geldi.


#Kodun kullanımı ve test edilmesi için yönergeleri aşağıda belirttim:

1. İlk olarak, "alice_in_wonderland.txt" dosyasını Python kodunuzla aynı klasöre yerleştirin.

2. Yazdığım kodu (zhu-takaoka.py) bir Python dosyasına (örneğin, deneme.py) yapıştırın.

3. Kodun çalışması için gereken aranan_kelimeler listesini düzenleyin. Bu liste, 'Alice in Wonderland.txt' metninde aramak 
   istediğiniz kelimeleri içermelidir.
   Örnek olarak, şu anda bu liste ['upon', 'sigh', 'Dormouse', 'jury-box', 'swim'] şeklinde tanımlanmıştır.

4. Kodu çalıştırın. Bu, Python IDE veya metin düzenleyicinizdeki 'Run' veya 'Çalıştır' düğmesine basarak veya terminalde
  'deneme.py' komutunu yazarak yapabilirsiniz.

5. Kod çalıştırıldığında, ekrana 'Alice in Wonderland' metninde aranan kelimelerin geçiş sayılarını gösteren bir çıktı alırsınız.

Kodunuzu test etmek için, aranan_kelimeler listesindeki kelimeleri 'Alice in Wonderland.txt' dosyasında kaç kez geçtiğini görebilirsiniz ve sonuçların değişip değişmediğini kontrol edebilirsiniz.
